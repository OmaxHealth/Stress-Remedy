// SASS: Vertical Centering - Outer element REQUIRES a height, not just a min-height
@mixin center-vertical(){
	position:relative;
	top: 50%;
	transform: translateY(-50%);
}

// SASS: Horizontal Centering
@mixin center-horizontal(){
	display:block;
	margin-left:auto;
	margin-right:auto;
}

// SASS: Placeholder Color
@mixin placeholderColor($color){
	::-webkit-input-placeholder {color:$color;}
	::-moz-placeholder {color:$color;}
	:-ms-input-placeholder {color:$color;}
	:-moz-placeholder {color:$color;}
}

// SASS: Font Declaration
@mixin font($font_name,$font_weight:null,$font_size:null,$line_height:null){

	// Assigns the Font Family
	@if (map-has-key($fonts, $font_name)) {
		font-family:map-get($fonts, $font_name); font-style:normal;
	} @else {
		font-family:map-get($fonts, 'default'); font-style:normal;
	}
	
	// Assigns the Font Weight
	@if ($font_weight){	
		@if (type-of($font_weight) == 'string'){
			@if (str-index($font_weight,'Light')){
				font-weight:300;
			} @else if (str-index($font_weight,'Regular')){
				font-weight:400;
			} 	@else if (str-index($font_weight,'Medium')){
				font-weight:500;
			}  @else if (str-index($font_weight,'SemiBold')){
				font-weight:600;
			}  @else if (str-index($font_weight,'Bold')){
				font-weight:700;
			}  @else if (str-index($font_weight,'Black')){
				font-weight:900;
			} @else {
				font-weight:normal;
			}	
			// Assigns the Font Style	
			@if (str-index($font_weight,'Italic')){
				font-style:italic;
			} @else {
				font-style:normal;
			}		
		} @else if (type-of($font_weight) == 'number'){
			font-weight:$font_weight;
		}
	}

	// Assigns the Font Size and Line Height
	@if ($font_size){
		// Do Nothing
	} @else if ($line_height){
		@include font-size($font_size,$font_size);
	} @else {
		@include font-size($font_size,$line_height);	
	}		
}

// SASS: Font Size Changes
@mixin font-size($font_size:null,$line_height:null){ 
	@if ($line_height == null) {
		font-size:$font_size;
		line-height:$font_size;
	} @else {
		font-size:$font_size;
		line-height:$line_height;		
	}		
}

// SASS: Sizing of element with background image, either default or resized proportionally based on WIDTH or manually setting WIDTH & HEIGHT
@mixin image-size($image,$width:null,$height:null){
	@if ($width != null and $height == null) {
		width:$width;
		height:($width * map-get($image,'height')) / map-get($image,'width');
	} @else if ($width == null and $height != null){
		height:$height;
		width:($height * map-get($image,'width')) / map-get($image,'height');
	} @else if ($width != null and $height != null){	
		width:$width;
		height:$height;	
	} @else {
		width:map-get($image,'width');
		height:map-get($image,'height');			
	}
}

// SASS: Sizing of element with background image as fluid 100% WIDTH
@mixin image-size-fluid($image){
	$ratio: map-get($image,'height') / map-get($image,'width');
	$lowerPad: ($ratio * 100%);
	height: 0;
   padding-bottom: $lowerPad;
}

// SASS: Background Image and styles
@mixin image-background($image,$position:null,$size:null){
	background-image:url($image-folder + map-get($image,'file'));
	background-repeat:no-repeat;
	@if ($position != null) {
		background-position:unquote($position);
	} @else {
		background-position:center center;
	}
	@if ($size != null) {
		background-size:unquote($size);
	} @else {
		background-size:100% 100%;
	}
}

// SASS: Proportional Background Sizing of an Image
@mixin image-background-size($image,$width:null,$height:null){
	@if ($width != null and $height == null) {
		background-size:$width ($width * map-get($image,'height')) / map-get($image,'width');
	} @else if ($width == null and $height != null){
		background-size:($height * map-get($image,'width')) / map-get($image,'height') $height;
	} @else if ($width != null and $height != null){	
		background-size:$width $height;	
	} @else {
		background-size:map-get($image,'width') map-get($image,'height');			
	}
}

// SASS: Background Image file only
@mixin image-background-file($image){
	background-image:url($image-folder + map-get($image,'file'));
}

// SASS: Background styles only
@mixin image-background-style($position:null,$size:null){
	background-repeat:no-repeat;
	@if ($position != null) {
		background-position:unquote($position);
	} @else {
		background-position:center center;
	}
	@if ($size != null) {
		background-size:unquote($size);
	} @else {
		background-size:100% 100%;
	}
}

// SASS: Button Size with Text Size
@mixin button($width, $height, $font){
	width:$width;
	height:$height;
	& > span {
		@include font-size($font);
		top:calc((100% - #{$font})/2);
	}	
}

// SASS: Split Background
@mixin splitBG($leftBG,$rightBG){
	& {position:relative; z-index:1;}
	&:before,&:after {content:""; display:block; width:50%; position:absolute; top:0px; bottom:0px; z-index:-1;}
	&:before {left:0px; background-color:$leftBG;}
	&:after {right:0px; background-color:$rightBG;}
	
	@include breakpoint('<=bp_768'){
		&:before,
		&:after {display:none;}
	}	
}
